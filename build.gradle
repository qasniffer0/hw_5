plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group 'com.sniffer0'
version '1.0-SNAPSHOT'

allure {
    report {
        version.set("2.20.1")
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set("2.20.1")
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation(
            "com.github.javafaker:javafaker:1.0.2",
            "com.codeborne:selenide:6.9.0",
            "io.qameta.allure:allure-selenide:2.19.0",
            "org.junit.jupiter:junit-jupiter:5.9.1",
            "org.slf4j:slf4j-simple:1.7.32"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task smoke_tests(type: Test) {
    useJUnitPlatform {
        includeTags("smoke")
    }
}

task one_property_test(type: Test) {
    useJUnitPlatform {
        includeTags("one_property")
    }
}

task hello_test(type: Test) {
    useJUnitPlatform {
        includeTags("hello")
    }
}

task two_test(type: Test) {
    useJUnitPlatform {
        includeTags("one_property") //запуск двух таск
        includeTags("hello")
    }
}

task tag_example_test(type: Test) {
    useJUnitPlatform {
        includeTags("needed", "negative") //запускаем с этими тэгами
        excludeTags("prod") //с этим тэгом не трогаем
    }
}
task tag_homework(type: Test) {
    useJUnitPlatform {
        includeTags("regress", "regress_old_package")
        excludeTags("smoke")
    }
}

test {
    useJUnitPlatform()
}